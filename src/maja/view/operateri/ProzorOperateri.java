
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package maja.view.operateri;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import maja.controller.ObradaOperater;
import maja.model.Operater;
import maja.utility.Pomocno;

/**
 *
 * @author Maja
 */
public class ProzorOperateri extends javax.swing.JFrame implements PozivateljPromjenaLozinke{
        private Operater operater;
        private Operater oznaceniOperater;
        private ObradaOperater obradaOperater;
 
    
    
    public ProzorOperateri() {
        initComponents();
        this.operater= new Operater();
        obradaOperater= new ObradaOperater();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        ucitajPodatke();
        
        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        uvjet = new javax.swing.JTextField();
        gumbTrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        korisnickoIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        prezime = new javax.swing.JTextField();
        gumbNovi = new javax.swing.JButton();
        gzmbObrisi = new javax.swing.JButton();
        gumbPromjeni = new javax.swing.JButton();
        gumbPromjeniLozinku = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Operators");

        gumbTrazi.setText("Search");
        gumbTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbTraziActionPerformed(evt);
            }
        });

        lista.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("Detalji");

        jLabel1.setText("Username");

        jLabel2.setText("First name");

        jLabel3.setText("Last name");

        gumbNovi.setText("New");
        gumbNovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbNoviActionPerformed(evt);
            }
        });

        gzmbObrisi.setText("Delete");
        gzmbObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gzmbObrisiActionPerformed(evt);
            }
        });

        gumbPromjeni.setText("Update");
        gumbPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbPromjeniActionPerformed(evt);
            }
        });

        gumbPromjeniLozinku.setText("Change password");
        gumbPromjeniLozinku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbPromjeniLozinkuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gumbPromjeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(korisnickoIme)
                    .addComponent(ime)
                    .addComponent(prezime)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(gumbNovi, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gzmbObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(gumbPromjeniLozinku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(korisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gumbNovi)
                    .addComponent(gzmbObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gumbPromjeni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gumbPromjeniLozinku)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gumbTrazi)))
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gumbTrazi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Detalji");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gumbTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbTraziActionPerformed
        ucitajPodatke();
    }//GEN-LAST:event_gumbTraziActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
          if (evt.getValueIsAdjusting()) {
            return;
        }
         oznaceniOperater = (Operater) lista.getSelectedValue();
         if(oznaceniOperater==null){
             return;
         }
         this.korisnickoIme.setText(oznaceniOperater.getKorisnickoIme());
         this.ime.setText(oznaceniOperater.getIme());
         this.prezime.setText(oznaceniOperater.getPrezime());
    }//GEN-LAST:event_listaValueChanged

    private void gumbNoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbNoviActionPerformed
        oznaceniOperater=new Operater();
        
        if(!kontrolaNovi()){
            return;
        }
        
          oznaceniOperater.setKorisnickoIme(this.korisnickoIme.getText());
          oznaceniOperater.setIme(this.ime.getText());
          oznaceniOperater.setPrezime(this.prezime.getText());
          String gl = Pomocno.generirajLozinku();
          oznaceniOperater.setLozinka(Pomocno.generirajMD5(gl.toCharArray()));
          
          oznaceniOperater = obradaOperater.dodaj(oznaceniOperater);
          ucitajPodatke();
          
          JOptionPane.showInputDialog(rootPane,"Generated password for operator",gl);
          
    }//GEN-LAST:event_gumbNoviActionPerformed

    private void gzmbObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gzmbObrisiActionPerformed
        if(oznaceniOperater==null ||
                lista.getSelectedValuesList().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Choose operator first!","Error",JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }
        
        if(!lista.getSelectedValuesList().isEmpty()){
            for(Object o : lista.getSelectedValuesList()){
                obradaOperater.obrisi((Operater)o);
            }
        }else{
                    obradaOperater.obrisi(oznaceniOperater);
        }
        
        

        ucitajPodatke();
    }//GEN-LAST:event_gzmbObrisiActionPerformed

    private void gumbPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbPromjeniActionPerformed
         if(oznaceniOperater==null){
            JOptionPane.showMessageDialog(rootPane,"Choose operator first!","Error",JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }
        if(!kontrolaPromjene()){
            return;
        }
        oznaceniOperater.setKorisnickoIme(this.korisnickoIme.getText());
          oznaceniOperater.setIme(this.ime.getText());
          oznaceniOperater.setPrezime(this.prezime.getText());
         obradaOperater.promjeni(oznaceniOperater);
          ucitajPodatke();
    }//GEN-LAST:event_gumbPromjeniActionPerformed

    private void gumbPromjeniLozinkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbPromjeniLozinkuActionPerformed
        if(lista.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(rootPane,"Choose operator first!","Error",JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
        oznaceniOperater = (Operater) lista.getSelectedValue();
        new PromjenaLozinke(oznaceniOperater, this).setVisible(true);
        
    }//GEN-LAST:event_gumbPromjeniLozinkuActionPerformed

    
    
    private boolean kontrolaNovi(){
        return kontrolaDuzineKorisnickoIme() && 
                kontrolaKorisnickoImePostojiUnos() &&
                kontrolaImePopunjeno() && 
                kontrolaPrezimePopunjeno();
    }
    
    private boolean kontrolaPromjene(){
        return kontrolaDuzineKorisnickoIme() && 
                kontrolaKorisnickoImePostojiPromjena() &&
                kontrolaImePopunjeno() && 
                kontrolaPrezimePopunjeno();
    }
    
    private boolean kontrolaDuzineKorisnickoIme(){
        if(korisnickoIme.getText().trim().length()==0){
            JOptionPane.showMessageDialog(rootPane,"Name field is mantatory!","Error",JOptionPane.ERROR_MESSAGE);
            this.korisnickoIme.requestFocus();
            return false;
        } return true;
    }
  
    
    private boolean kontrolaKorisnickoImePostojiUnos(){
         if(obradaOperater.provjeraKorisnickoImeUnos(this.korisnickoIme.getText())){
            JOptionPane.showMessageDialog(rootPane,"Operator with same name already exists!","Error",JOptionPane.ERROR_MESSAGE);
            this.korisnickoIme.requestFocus();
            return false;
        }
        return true;
    }
    
    private boolean kontrolaKorisnickoImePostojiPromjena(){
         if(obradaOperater.provjeraKorisnickoImePromjena(korisnickoIme.getText(),oznaceniOperater.getSifra())){
            JOptionPane.showMessageDialog(rootPane,"Username already exists!!","Error",JOptionPane.ERROR_MESSAGE);
            this.korisnickoIme.requestFocus();
            return false;
        }
        return true;
    }
    
    private boolean kontrolaImePopunjeno(){
         if(ime.getText().trim().length()==0){
            JOptionPane.showMessageDialog(rootPane,"Name is mandatory!","Error",JOptionPane.ERROR_MESSAGE);
            this.ime.requestFocus();
            return false;
        }
        return true;
    }
    
    private boolean kontrolaPrezimePopunjeno(){
         if(prezime.getText().trim().length()==0){
            JOptionPane.showMessageDialog(rootPane,"Last name is mandatory!","Error",JOptionPane.ERROR_MESSAGE);
            this.prezime.requestFocus();
            return false;
        }
        return true;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gumbNovi;
    private javax.swing.JButton gumbPromjeni;
    private javax.swing.JButton gumbPromjeniLozinku;
    private javax.swing.JButton gumbTrazi;
    private javax.swing.JButton gzmbObrisi;
    private javax.swing.JTextField ime;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField korisnickoIme;
    private javax.swing.JList lista;
    private javax.swing.JTextField prezime;
    private javax.swing.JTextField uvjet;
    // End of variables declaration//GEN-END:variables

       public void ucitajPodatke() {
       List<Operater> lista = obradaOperater.getOperateri(uvjet.getText());
        DefaultListModel<Operater> m= new DefaultListModel<>();
        for (Operater operater1 : lista) {
            m.addElement(operater1);
        }
        this.lista.setModel(m);
    
    }
    
     @Override
    public void nakonPromjene() {
       ucitajPodatke();
    }
    
}
