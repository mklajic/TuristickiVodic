/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package maja.view.tockaInteresa;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.concurrent.RejectedExecutionHandler;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import maja.controller.ObradaKategorija;
import maja.controller.ObradaRejting;
import maja.controller.ObradaTockaInteresa;
import maja.controller.ObradaVezaKategorija;
import maja.model.Kategorije;
import maja.model.Rejting;
import maja.model.TockaInteresa;
import maja.model.VezaKategorija;
import maja.view.operateri.Autorizacija;
import maja.view.rejting.PrikazRejtingaTocke;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import java.sql.Date;
import maja.view.kategorije.ProzorKategorije;

/**
 *
 * @author Maja
 */
public class ProzorTockaInteresa extends javax.swing.JFrame implements NakonCRUDPromjena{
    
    private ObradaTockaInteresa obradaTockaInteresa;
    private ObradaRejting obradaRejting;
    private Rejting rejting;
    private TockaInteresa oznacenaStavka;
    private ObradaVezaKategorija obradaVezaKategorija;
    private Kategorije kategorije;
    private VezaKategorija vezaKategorija;
    private SimpleDateFormat df= new SimpleDateFormat("dd.MM.yyyy");
    
    /**
     * Creates new form ProzorTockaInteresa
     */
    public ProzorTockaInteresa() {
        initComponents();
        obradaTockaInteresa=new ObradaTockaInteresa();
        obradaRejting=new ObradaRejting();
        oznacenaStavka=new TockaInteresa();
        rejting=new Rejting();
        ucitajPodatke();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uvjet = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        adresa = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        kratkiOpis = new javax.swing.JButton();
        gumbGoogle = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaKategorije = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        akcijaRating1 = new javax.swing.JButton();
        akcijaRating2 = new javax.swing.JButton();
        akcijaRating3 = new javax.swing.JButton();
        akcijaRating4 = new javax.swing.JButton();
        akcijaRating5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        akcijaEksportXML = new javax.swing.JButton();
        akcijaRejting = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Points Of Interest");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lista.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));
        jPanel1.setToolTipText("");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        adresa.setColumns(20);
        adresa.setRows(5);
        adresa.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        adresa.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane3.setViewportView(adresa);

        jLabel4.setText("Address");

        kratkiOpis.setText("Short description");
        kratkiOpis.setBorder(null);
        kratkiOpis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kratkiOpisActionPerformed(evt);
            }
        });

        gumbGoogle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/Maps-icon.png"))); // NOI18N
        gumbGoogle.setText("Google Map");
        gumbGoogle.setBorder(null);
        gumbGoogle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbGoogleActionPerformed(evt);
            }
        });

        listaKategorije.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listaKategorije);

        jLabel3.setText("Category");

        jLabel7.setText("Rate here!");

        akcijaRating1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating1ActionPerformed(evt);
            }
        });

        akcijaRating2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating2ActionPerformed(evt);
            }
        });

        akcijaRating3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating3ActionPerformed(evt);
            }
        });

        akcijaRating4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating4ActionPerformed(evt);
            }
        });

        akcijaRating5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gumbGoogle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kratkiOpis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(akcijaRating1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(akcijaRating2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(akcijaRating3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(akcijaRating4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(akcijaRating5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gumbGoogle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kratkiOpis, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(akcijaRating1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(akcijaRating2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(akcijaRating3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(akcijaRating4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(akcijaRating5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Other"));

        akcijaEksportXML.setText("Export XML");
        akcijaEksportXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaEksportXMLActionPerformed(evt);
            }
        });

        akcijaRejting.setText("See rating details!");
        akcijaRejting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRejtingActionPerformed(evt);
            }
        });

        jButton2.setText("Browse by Category");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(akcijaEksportXML, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addComponent(akcijaRejting, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(akcijaEksportXML)
                    .addComponent(akcijaRejting)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
         
        
        if (evt.getValueIsAdjusting()) {
            return;
        }
         oznacenaStavka = (TockaInteresa) lista.getSelectedValue();
         if(oznacenaStavka==null){
             return;
         }
        
         this.adresa.setText(oznacenaStavka.getAdresa());
        
      DefaultListModel<Kategorije> mk = new DefaultListModel<>();
        for (Kategorije k : oznacenaStavka.getKategorije()) {
            mk.addElement(k);
        }
        this.listaKategorije.setModel(mk);

    }//GEN-LAST:event_listaValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ucitajPodatke();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void gumbGoogleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbGoogleActionPerformed
        if(lista.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(rootPane,"Select point of interest","Notice",JOptionPane.PLAIN_MESSAGE);
            return;
        }

        oznacenaStavka = (TockaInteresa) lista.getSelectedValue();
        new GoogleMap(oznacenaStavka).setVisible(true);
    }//GEN-LAST:event_gumbGoogleActionPerformed

    private void kratkiOpisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kratkiOpisActionPerformed
        if(lista.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(rootPane,"Select point of interest","Notice",JOptionPane.PLAIN_MESSAGE);
            return;
        }

        oznacenaStavka = (TockaInteresa) lista.getSelectedValue();
        new KratkiOpis(oznacenaStavka).setVisible(true);
    }//GEN-LAST:event_kratkiOpisActionPerformed

    private void akcijaRejtingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRejtingActionPerformed
       new PrikazRejtingaTocke().setVisible(true);

    }//GEN-LAST:event_akcijaRejtingActionPerformed

    private void akcijaEksportXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaEksportXMLActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setApproveButtonText("Save");
        File startFile = new File(System.getProperty("user.home") + File.separator + "Desktop");
        jfc.setCurrentDirectory(startFile);
        FileFilter filter = new FileNameExtensionFilter("XML", "xml");
        jfc.setFileFilter(filter);
        int rez = jfc.showOpenDialog(this.getParent());
        if (rez == JFileChooser.APPROVE_OPTION) {

            String putanjaXML = jfc.getSelectedFile().getAbsolutePath();
            putanjaXML = putanjaXML + (putanjaXML.endsWith(".xml") ? "" : ".xml");

            try {

                DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
                Document doc = docBuilder.newDocument();
                Element rootElement = doc.createElement("edunova");
                doc.appendChild(rootElement);

                Element tockaInteresaElement, popisKategorijaElement, kategorijeElement;
                for (TockaInteresa t : obradaTockaInteresa.getTockaInteresa("")) {
                    tockaInteresaElement = doc.createElement("tockaInteresa");
                    tockaInteresaElement.setAttribute("sifra", String.valueOf(t.getSifra()));
                    tockaInteresaElement.setAttribute("naziv", t.getNaziv());
                    tockaInteresaElement.setAttribute("adresa", t.getAdresa());
                    tockaInteresaElement.setAttribute("kratakOpis", t.getKratakOpis());
                    tockaInteresaElement.setAttribute("putanja", t.getPutanja());

                    popisKategorijaElement = doc.createElement("popisKategorija");

                    for (Kategorije kategorije : t.getKategorije()) {
                        kategorijeElement = doc.createElement("kategorije");

                        kategorijeElement.setAttribute("sifra", String.valueOf(kategorije.getSifra()));
                        kategorijeElement.setAttribute("nazivKategorije", kategorije.getNazivKategorije());

                        popisKategorijaElement.appendChild(kategorijeElement);
                    }

                    tockaInteresaElement.appendChild(popisKategorijaElement);
                    rootElement.appendChild(tockaInteresaElement);

                }

                TransformerFactory transformerFactory = TransformerFactory.newInstance();

                Transformer transformer = transformerFactory.newTransformer();
                transformer.setOutputProperty(OutputKeys.INDENT, "yes");
                DOMSource source = new DOMSource(doc);
                StreamResult result = new StreamResult(new File(putanjaXML));

                // Output to console for testing
                // StreamResult result = new StreamResult(System.out);

                transformer.transform(source, result);

                ProcessBuilder pb = new ProcessBuilder("cmd", "/C start " + putanjaXML.substring(0, putanjaXML.lastIndexOf("\\")));
                    pb.start();

                } catch (ParserConfigurationException pce) {
                    pce.printStackTrace();
                } catch (TransformerException tfe) {
                    tfe.printStackTrace();
                } catch (IOException tfe) {
                    tfe.printStackTrace();
                }
            }
    }//GEN-LAST:event_akcijaEksportXMLActionPerformed

    private void akcijaRating1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating1ActionPerformed
        if(oznacenaStavka==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");
        
        rejting.setOcjena(1);
        rejting.setTockaInteresa((TockaInteresa)this.lista.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 1", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating1ActionPerformed

    private void akcijaRating2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating2ActionPerformed
        if(oznacenaStavka==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");
        
        rejting.setOcjena(2);
        rejting.setTockaInteresa((TockaInteresa)this.lista.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 2", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating2ActionPerformed

    private void akcijaRating3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating3ActionPerformed
         if(oznacenaStavka==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");
        
        rejting.setOcjena(3);
        rejting.setTockaInteresa((TockaInteresa)this.lista.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 3", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating3ActionPerformed

    private void akcijaRating4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating4ActionPerformed
         if(oznacenaStavka==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");
        
        rejting.setOcjena(4);
        rejting.setTockaInteresa((TockaInteresa)this.lista.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 4!", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating4ActionPerformed

    private void akcijaRating5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating5ActionPerformed
        if(oznacenaStavka==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");
        
        rejting.setOcjena(5);
        rejting.setTockaInteresa((TockaInteresa)this.lista.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        
        JOptionPane.showMessageDialog(rootPane, "You rated with 5", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new ProzorKategorije().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea adresa;
    private javax.swing.JButton akcijaEksportXML;
    private javax.swing.JButton akcijaRating1;
    private javax.swing.JButton akcijaRating2;
    private javax.swing.JButton akcijaRating3;
    private javax.swing.JButton akcijaRating4;
    private javax.swing.JButton akcijaRating5;
    private javax.swing.JButton akcijaRejting;
    private javax.swing.JButton gumbGoogle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton kratkiOpis;
    private javax.swing.JList lista;
    private javax.swing.JList listaKategorije;
    private javax.swing.JTextField uvjet;
    // End of variables declaration//GEN-END:variables

    private void ucitajPodatke() {
        List<TockaInteresa> l= obradaTockaInteresa.getTockaInteresa(uvjet.getText());
        DefaultListModel<TockaInteresa> m= new DefaultListModel<>();
        for (TockaInteresa tockaInteresa : l) {
            m.addElement(tockaInteresa);
            
        }
        this.lista.setModel(m);
    }

    @Override
    public void nakonPromjene() {
        ucitajPodatke();
    }

   
}
