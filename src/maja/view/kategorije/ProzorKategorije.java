/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package maja.view.kategorije;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import maja.controller.ObradaKategorija;
import maja.controller.ObradaRejting;
import maja.controller.ObradaTockaInteresa;
import maja.controller.ObradaVezaKategorija;
import maja.model.Kategorije;
import maja.model.Operater;
import maja.model.Rejting;
import maja.model.TockaInteresa;
import maja.model.VezaKategorija;
import maja.view.rejting.PrikazRejtingaTocke;
import maja.view.tockaInteresa.GoogleMap;
import maja.view.tockaInteresa.KratkiOpis;

/**
 *
 * @author Maja
 */
public class ProzorKategorije extends javax.swing.JFrame {


   private Kategorije kategorije;
   private ObradaVezaKategorija obradaVezaKategorija;
   private ObradaKategorija obradaKategorija;
   private VezaKategorija vezakategorija;
   private TockaInteresa tockeInteresa;
   private ObradaTockaInteresa obradaTockaInteresa;
    private ObradaRejting obradaRejting;
    private Rejting rejting;
   private SimpleDateFormat df= new SimpleDateFormat("dd.MM.yyyy");
    
    public ProzorKategorije() {
        initComponents();
        obradaRejting=new ObradaRejting();
        rejting=new Rejting();
        obradaVezaKategorija= new ObradaVezaKategorija();
        obradaKategorija= new ObradaKategorija();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        
        ucitajPodatke();
      
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        uvjet = new javax.swing.JTextField();
        akcijaTrazi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaTockeInteresa = new javax.swing.JList();
        uvjet1 = new javax.swing.JTextField();
        akcijaTrazi1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        adresa = new javax.swing.JTextField();
        googleMap = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        gumbRejting = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        akcijaRating1 = new javax.swing.JButton();
        akcijaRating3 = new javax.swing.JButton();
        akcijaRating5 = new javax.swing.JButton();
        akcijaRating4 = new javax.swing.JButton();
        akcijaRating2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Categories");

        jLabel1.setText("Categories");

        lista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lista);

        akcijaTrazi.setText("Search");
        akcijaTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaTraziActionPerformed(evt);
            }
        });

        jLabel2.setText("Points of interest");

        listaTockeInteresa.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaTockeInteresa.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaTockeInteresaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaTockeInteresa);

        akcijaTrazi1.setText("Search");
        akcijaTrazi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaTrazi1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Address");

        googleMap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/Maps-icon.png"))); // NOI18N
        googleMap.setText("Google Map");
        googleMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                googleMapActionPerformed(evt);
            }
        });

        jButton1.setText("Short Description");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gumbRejting.setText("See Rating Details!");
        gumbRejting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbRejtingActionPerformed(evt);
            }
        });

        jLabel7.setText("Rate here!");

        akcijaRating1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating1ActionPerformed(evt);
            }
        });

        akcijaRating3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating3ActionPerformed(evt);
            }
        });

        akcijaRating5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating5ActionPerformed(evt);
            }
        });

        akcijaRating4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating4ActionPerformed(evt);
            }
        });

        akcijaRating2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maja/ikone/star-empty-iconsmall.png"))); // NOI18N
        akcijaRating2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaRating2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(akcijaRating1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(akcijaRating2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(akcijaRating3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(akcijaRating4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(akcijaRating5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(akcijaRating2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(akcijaRating1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(akcijaRating3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(akcijaRating4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(akcijaRating5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(gumbRejting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(googleMap, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(akcijaTrazi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(uvjet1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(akcijaTrazi1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(adresa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uvjet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(akcijaTrazi1)
                    .addComponent(akcijaTrazi)
                    .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adresa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(googleMap, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gumbRejting, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void akcijaTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaTraziActionPerformed
        ucitajPodatke();
    }//GEN-LAST:event_akcijaTraziActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
   if (evt.getValueIsAdjusting()) {
            return;
        }
         vezakategorija = (VezaKategorija) lista.getSelectedValue();
         if(vezakategorija==null){
             return;
         }
        
         DefaultListModel<TockaInteresa> mpo = 
                new DefaultListModel<>();
         for (TockaInteresa tockaInteresa : vezakategorija.getListaTocke()) {
            mpo.addElement(tockaInteresa);
        }
         this.listaTockeInteresa.setModel(mpo);

       
        
    }//GEN-LAST:event_listaValueChanged

    private void akcijaTrazi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaTrazi1ActionPerformed

    }//GEN-LAST:event_akcijaTrazi1ActionPerformed

    private void listaTockeInteresaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaTockeInteresaValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
         tockeInteresa = (TockaInteresa) listaTockeInteresa.getSelectedValue();
         if(tockeInteresa==null){
             return;
         }
        
         this.adresa.setText(tockeInteresa.getAdresa());
    }//GEN-LAST:event_listaTockeInteresaValueChanged

    private void googleMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_googleMapActionPerformed
       if(listaTockeInteresa.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(rootPane,"Select point of interest first","Notice",JOptionPane.PLAIN_MESSAGE);
            return;
        }

        tockeInteresa = (TockaInteresa) listaTockeInteresa.getSelectedValue();
        new GoogleMap(tockeInteresa).setVisible(true);
    }//GEN-LAST:event_googleMapActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      if(listaTockeInteresa.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(rootPane,"Select point of interest","Notice",JOptionPane.PLAIN_MESSAGE);
            return;
        }

        tockeInteresa = (TockaInteresa) listaTockeInteresa.getSelectedValue();
        new KratkiOpis(tockeInteresa).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void gumbRejtingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbRejtingActionPerformed
        new PrikazRejtingaTocke().setVisible(true);
    }//GEN-LAST:event_gumbRejtingActionPerformed

    private void akcijaRating1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating1ActionPerformed
        if(tockeInteresa==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");

        rejting.setOcjena(1);
        rejting.setTockaInteresa((TockaInteresa)this.listaTockeInteresa.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 1", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating1ActionPerformed

    private void akcijaRating2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating2ActionPerformed
             if(tockeInteresa==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");

        rejting.setOcjena(2);
        rejting.setTockaInteresa((TockaInteresa)this.listaTockeInteresa.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 2", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating2ActionPerformed

    private void akcijaRating3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating3ActionPerformed
            if(tockeInteresa==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");

        rejting.setOcjena(3);
        rejting.setTockaInteresa((TockaInteresa)this.listaTockeInteresa.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 3", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating3ActionPerformed

    private void akcijaRating4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating4ActionPerformed
           if(tockeInteresa==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");

        rejting.setOcjena(4);
        rejting.setTockaInteresa((TockaInteresa)this.listaTockeInteresa.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 4", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating4ActionPerformed

    private void akcijaRating5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaRating5ActionPerformed
             if(tockeInteresa==null){
            JOptionPane.showMessageDialog(rootPane, "Select point of interest first", "Error!", JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        try {
            rejting.setDatum((java.util.Date) df.parse((day + "." + (month+1) + "." + year)));
        } catch (ParseException ex) {

        }

        rejting.setKomentar("");

        rejting.setOcjena(5);
        rejting.setTockaInteresa((TockaInteresa)this.listaTockeInteresa.getSelectedValue());

        try {
            rejting=obradaRejting.dodaj(rejting);
        } catch (Exception e) {
        }

        ucitajPodatke();
        JOptionPane.showMessageDialog(rootPane, "You rated with 5", "Notice!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_akcijaRating5ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adresa;
    private javax.swing.JButton akcijaRating1;
    private javax.swing.JButton akcijaRating2;
    private javax.swing.JButton akcijaRating3;
    private javax.swing.JButton akcijaRating4;
    private javax.swing.JButton akcijaRating5;
    private javax.swing.JButton akcijaTrazi;
    private javax.swing.JButton akcijaTrazi1;
    private javax.swing.JButton googleMap;
    private javax.swing.JButton gumbRejting;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lista;
    private javax.swing.JList listaTockeInteresa;
    private javax.swing.JTextField uvjet;
    private javax.swing.JTextField uvjet1;
    // End of variables declaration//GEN-END:variables

    private void ucitajPodatke() {
         List<VezaKategorija> l = obradaVezaKategorija.getVezaKategorije(uvjet.getText());
       
        DefaultListModel<VezaKategorija> m = 
                new DefaultListModel<>();
        
        for (VezaKategorija vk : l) {
            m.addElement(vk);
        }
             lista.setModel(m);
        }
             

    
   }
        
        


