/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package maja.view.kategorije;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import maja.controller.ObradaKategorija;
import maja.controller.ObradaTockaInteresa;
import maja.model.Kategorije;
import maja.model.TockaInteresa;
import net.atlanticbb.tantlinger.shef.HTMLEditorPane;

/**
 *
 * @author Maja
 */
public class CRUDKategorije extends javax.swing.JFrame {

  private HTMLEditorPane html;
  private ObradaKategorija obradaKategorija;
  private ObradaTockaInteresa obradaTockaInteresa;
  private Kategorije oznacenaStavka;
  
    public CRUDKategorije() {
        initComponents();
        obradaKategorija= new ObradaKategorija();
        ucitajPodatke();
        html = new HTMLEditorPane();
        html.setSize(panelKategorije.getSize());
        panelKategorije.add(html);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        uvjet = new javax.swing.JTextField();
        trazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelKategorije = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Insert, update and delete categories");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Categories"));

        trazi.setText("Search");
        trazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traziActionPerformed(evt);
            }
        });

        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(trazi))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        jLabel1.setText("Name of category");

        javax.swing.GroupLayout panelKategorijeLayout = new javax.swing.GroupLayout(panelKategorije);
        panelKategorije.setLayout(panelKategorijeLayout);
        panelKategorijeLayout.setHorizontalGroup(
            panelKategorijeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelKategorijeLayout.setVerticalGroup(
            panelKategorijeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 155, Short.MAX_VALUE)
        );

        jButton2.setText("Add new category");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete category");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Update category");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelKategorije, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelKategorije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void traziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traziActionPerformed
        ucitajPodatke();
    }//GEN-LAST:event_traziActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
           
        if (evt.getValueIsAdjusting()) {
            return;
        }
         oznacenaStavka = (Kategorije) lista.getSelectedValue();
         if(oznacenaStavka==null){
             return;
         }
         
         this.html.setText(oznacenaStavka.getNazivKategorije());
    }//GEN-LAST:event_listaValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       oznacenaStavka= new Kategorije();
        
        if(!kontrolaNovi()){
            return;
        }
        
          oznacenaStavka.setNazivKategorije(this.html.getText());
          
          
          oznacenaStavka = obradaKategorija.dodaj(oznacenaStavka);
          ucitajPodatke();
          
          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(oznacenaStavka==null){
            JOptionPane.showMessageDialog(rootPane,"Select item first!","Error",JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }
        if(!kontrolaPromjene()){
            return;
        }
        oznacenaStavka.setNazivKategorije(this.html.getText());
        obradaKategorija.promjeni(oznacenaStavka);
          ucitajPodatke();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(oznacenaStavka==null ||
                lista.getSelectedValuesList().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Select item first","Error",JOptionPane.ERROR_MESSAGE);
            this.lista.requestFocus();
            return;
        }
        
        if(!lista.getSelectedValuesList().isEmpty()){
            for(Object k : lista.getSelectedValuesList()){
                obradaKategorija.obrisi((Kategorije)k);
            }
        }else{
                    obradaKategorija.obrisi(oznacenaStavka);
        }
        
        

        ucitajPodatke();
    }//GEN-LAST:event_jButton3ActionPerformed

   private boolean kontrolaNovi(){
        return kontrolaDuzineNaziva() && 
                kontrolaNazivKategorijePostoji() &&
                kontrolaNazivPopunjen();
    }
    private boolean kontrolaPromjene() {
          return kontrolaDuzineNaziva() && 
                kontrolaNazivKategorijePostojiPromjena() &&
                kontrolaNazivPopunjen();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lista;
    private javax.swing.JPanel panelKategorije;
    private javax.swing.JButton trazi;
    private javax.swing.JTextField uvjet;
    // End of variables declaration//GEN-END:variables

    private void ucitajPodatke() {
       List<Kategorije> lista= obradaKategorija.getKategorije(uvjet.getText());
        DefaultListModel<Kategorije> m= new DefaultListModel<>();
        for (Kategorije kategorije : lista) {
            m.addElement(kategorije);
            
        }
        this.lista.setModel(m);
    }

    private boolean kontrolaDuzineNaziva() {
        if(html.getText().trim().length()>=50){
            JOptionPane.showMessageDialog(rootPane,"Name of category shouldn't contain more than 50 letters!","Error",JOptionPane.ERROR_MESSAGE);
            this.html.requestFocus();
            return false;
        } return true;
    }

    private boolean kontrolaNazivKategorijePostoji() {
        if(obradaKategorija.provjeraNazivKategorije(this.html.getText())){
            JOptionPane.showMessageDialog(rootPane,"Category with that name already exists!","Error",JOptionPane.ERROR_MESSAGE);
            this.html.requestFocus();
            return false;
        }
        return true;
    }

    private boolean kontrolaNazivPopunjen() {
         if(html.getText().trim().length()==0){
            JOptionPane.showMessageDialog(rootPane,"Add name of category first!","Error",JOptionPane.ERROR_MESSAGE);
            this.html.requestFocus();
            return false;
        }
        return true;
    }

   

    private boolean kontrolaNazivKategorijePostojiPromjena() {
         if(obradaKategorija.provjeraNazivKategorijePromjena(html.getText(),oznacenaStavka.getSifra())){
            JOptionPane.showMessageDialog(rootPane,"Category name already exists!!","Error",JOptionPane.ERROR_MESSAGE);
            this.html.requestFocus();
            return false;
        }
        return true;
    }
    
}
